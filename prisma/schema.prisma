generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String
  password  String
  role      Role
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Customer  Customer[]
  reports   Report[]
}

model Customer {
  id               Int               @id @default(autoincrement())
  name             String
  email            String            @unique
  phone            String
  address          String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  createdByUserId  Int
  createdBy        User              @relation(fields: [createdByUserId], references: [id])
  customerProducts CustomerProduct[]
  reports          Report[]
}

model Product {
  id               Int               @id @default(autoincrement())
  name             String
  brand            String
  model            String
  description      String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  customerProducts CustomerProduct[]
}

model CustomerProduct {
  id              Int          @id @default(autoincrement())
  serialNumber    String       @unique
  internalControl String
  tecnoControl    String
  productId       Int
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  customerId      Int
  customer        Customer     @relation(fields: [customerId], references: [id])
  product         Product      @relation(fields: [productId], references: [id])
  reportItems     ReportItem[]
}

model Report {
  id                   Int          @id @default(autoincrement())
  customerId           Int
  userId               Int
  observationsEngineer String?
  observationsCustomer String?
  serviceType          ServiceType
  reportType           ReportType
  status               ReportStatus
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
  customer             Customer     @relation(fields: [customerId], references: [id])
  user                 User         @relation(fields: [userId], references: [id])
  reportItems          ReportItem[]
}

model ReportItem {
  id                Int             @id @default(autoincrement())
  reportId          Int
  customerProductId Int
  observations      String?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  customerProduct   CustomerProduct @relation(fields: [customerProductId], references: [id])
  report            Report          @relation(fields: [reportId], references: [id])

  @@unique([reportId, customerProductId])
}

enum Role {
  ADMIN
  TECHNICIAN
  CUSTOMER_SUPPORT
}

enum ServiceType {
  PREVENTIVE
  TRAINING
  DIAGNOSTIC
  CORRECTIVE
  RELOCATION
  UPDATE
  PRE_INSTALLATION
  REPLACEMENT_PARTS
  OTHER
  INSTALL
}

enum ReportType {
  WARRANTY
  CONTRACT
  NO_CHARGE
  BILLABLE
}

enum ReportStatus {
  PENDING
  IN_PROGRESS
  DELIVERED
  CANCELED
}
